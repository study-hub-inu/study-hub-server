server:
  port: 5000
  servlet:
    encoding:
      charset: utf-8

spring:
  redis:
    host: studyhub-redis.reoorm.ng.0001.apn2.cache.amazonaws.com
    port: 6379
  datasource:
    url: jdbc:mysql://${rds.hostname}:${rds.port}/${rds.db.name}?allowPublicKeyRetrieval=true&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${rds.username}
    password: ${rds.password}
  servlet:
    multipart:
      max-file-size: 20MB

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  batch:
    jdbc:
      initialize-schema: ALWAYS
    job:
      enabled: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${email.username}
    password: ${email.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  level:
    '[org.springframework.boot.web]': INFO

jwt:
  secret: ${jwt.secret}

cloud:
  aws:
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${s3.access}
      secret-key: ${s3.secret}
    s3:
      bucket: ${s3.name}

firebase:
  project:
    id: ${firebase.project.id}

sentry:
  dsn: ${sentry_dsn_value}
  traces-sample-rate: 1.0
  exception-resolver-order: -2147483647   #including ones handled by @ExceptionHandler annotated methods.
  debug: true
  logging:
    enabled: true
    minimum-event-level: warn